
@import url('https://fonts.googleapis.com/css?family=Quattrocento');
/*******************************NavBar*******************************/
/* Add a black background color to the top navigation */
.topnav {
	/*background-color: #333;*/
	background: rgba(0,0,0,0.6);
	overflow: hidden;
	position: fixed;
	/*float: left;*/
	top: 0;
	margin-bottom: 50px;
	z-index: 1;
	width : 100%;
}

/* Style the links inside the navigation bar */
.topnav a {
  background: inherit;
	float: left;
	display: inline-block;
	color: #f2f2f2;
	text-align: center;
	padding: 14px 16px;
	text-decoration: none;
	font-size: 17px;
  -webkit-transition: all .3s ease-in;

}
/* Change the color of links on hover */
.topnav a:hover {
	background-color: #ddd;
	color: black;
}

/* Add a color to the active/current link */
.topnav a.active {
	background-color: #4CAF50;
	color: white;
}
/* used for making the navbar stick when scrolling*/
.navbar-fixed {
    top: 0;
    z-index: 100;
	position: fixed;
    width: 100%;
    background: rgba(0,0,0,0.6);
} 
/*
*TODO: Implement shrinking navbar. example at https://codepen.io/devotiongeo/pen/xiphD
*/
#toTop img {
  width: 50px;
}
#toTop img:hover {
  cursor: pointer;
}
.topnav img {
  z-index: 1000;
  height: 2.5em;
  position: absolute;
  left: 40px;
  top: 10px;
  transition: all 0.5s linear;
}

.move {
  top: -60px;
}

.topnav span {
  position: absolute;
  left: 40px;
  top: 10px;
  font-weight: bold;
  transition: all 0.5s ease-in;
}

.movetext {
  top: -30px;
}

.small {
  padding: .5em 1em;
}


/*a rounded button*/
.button-rounded:hover {
	border-radius: 12px;
	background-color: #4CAF50; /* Green */
	border: none;
	color: white;
	padding: 150px 320px;
	text-align: center;
	text-decoration: none;
	display: inline-block;
	font-size: 16px;
	margin: 4px 2px;
	cursor: pointer;
	-webkit-transition-duration: 0.4s; /* Safari */
	transition-duration: 0.4s;
	box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);

}

.button-rounded:hover {
	box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);
}

.button-rounded:hover span {display:none}
.button-rounded:hover:before {content:"holy shit you did it"}



/*put the "responsive" in "responsive image gallery*/
/*gallery auto adjusts itself to fit neatly if the window is resized or if the device is small*/

.responsive {
    padding: 0 6px;
    float: left;
    width: 24.99999%;
}

@media only screen and (max-width: 700px){
    .responsive {
        width: 49.99999%;
        margin: 6px 0;
    }
}

@media only screen and (max-width: 500px){
    .responsive {
        width: 100%;
    }
}

.clearfix:after {
    content: "";
    display: table;
    clear: both;
}

/*******************************etc css*******************************/
.bio{
	background-image:    linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url("../images/pfleegerhall.jpg");
	background-position: center top;
	/*background-repeat:	no-repeat;*/
	-webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
	/*background-size: 500px 500px;*/
	background-color:    #808080;
	padding-top: 130px;
	padding-right: 130px;
	padding-bottom: 250px;
	padding-left: 180px;
	font-family: Quattrocento;
	font-size: 18px;
	color: white;
}

.foot{
	background-image:    linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url("../images/skyline.jpg");
	background-color:    #cccccc;
	background-position: center bottom;
	padding-top: 150px;
	padding-right: 130px;
	padding-bottom: 150px;
	padding-left: 180px;
	font-family: Verdana;
	color: white;
}

h1.intro{
	/*extra padding for the intro header*/
	padding: 2cm;
	font: 50;
}

img.showoff{
	width: 100%;
    height: auto;
}

ul{
	position: relative;
	display: inline-block;
    text-align:left;
}

.bg-1 {
	background-color: rgb(90,90,90);
	color: white;
	padding-top: 50px;
	padding-right: 30px;
	padding-bottom: 50px;
	padding-left: 80px;
	height:auto;
	overflow:auto;
}


/*bg3 is for images on a grey background*/
.bg-3 {
	background-color: grey;
	color: white;
	padding-top: 50px;
	padding-right: 30px;
	padding-bottom: 50px;
	padding-left: 80px;
}

.schedule {
    position: relative;
	padding: 100px;
	background-color: grey;
	color: white;
	min-height: 100%; 
}


/*******************************for the image gallery*******************************/
div.gallery {
    border: 5px solid #ccc;
    float: center;
    width: 80%;
}

div.gallery:hover {
    border: 1px solid #777;
}

div.gallery img {
    width: 100%;
    height: auto;
}

div.desc {
    padding: 15px;
    text-align: center;
}

/******************************Modal stuff for image gallery******************************/
* {
  box-sizing: border-box;
}

.row > .column {
  padding: 0 8px;
}

.row:after {
  content: "";
  display: table;
  clear: both;
}

.column {
  float: left;
  width: 25%;
}

/* The Modal (background) */
.modal {
  display: none;
  position: fixed;
  z-index: 1;
  padding-top: 100px;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: black;
}

/* Modal Content */
.modal-content {
  position: relative;
  background-color: #fefefe;
  margin: auto;
  padding: 0;
  width: 90%;
  max-width: 1200px;
}

/* The Close Button */
.close {
  color: white;
  position: absolute;
  top: 10px;
  right: 25px;
  font-size: 35px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: #999;
  text-decoration: none;
  cursor: pointer;
}

.mySlides {
  display: none;
}

/* Next & previous buttons */
.prev,
.next {
  cursor: pointer;
  position: absolute;
  top: 50%;
  width: auto;
  padding: 16px;
  margin-top: -50px;
  color: white;
  font-weight: bold;
  font-size: 20px;
  transition: 0.6s ease;
  border-radius: 0 3px 3px 0;
  user-select: none;
  -webkit-user-select: none;
}

/* Position the "next button" to the right */
.next {
  right: 0;
  border-radius: 3px 0 0 3px;
}

/* On hover, add a black background color with a little bit see-through */
.prev:hover,
.next:hover {
  background-color: rgba(0, 0, 0, 0.8);
}

/* Number text (1/3 etc) */
.numbertext {
  color: #f2f2f2;
  font-size: 12px;
  padding: 8px 12px;
  position: absolute;
  top: 0;
}

.caption-container {
  text-align: center;
  background-color: black;
  padding: 2px 16px;
  color: white;
}

img.demo {
  opacity: 0.6;
}

.active,
.demo:hover {
  opacity: 1;
}

img.hover-shadow {
  transition: 0.3s
}

.hover-shadow:hover {
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)
}

/******************************Slideshow (oh yeah, she's in it)******************************/
/**
 * See: http://www.css-101.org/articles/ken-burns_effect/css-transition.php
 */

/**
 * Styling the container (the wrapper)
 * 
 * position is used to make this box a containing block (it becomes a reference for its absolutely positioned children). overflow will hide part of the images moving outside of the box.
 */

#slideshow {
    position:relative;
    width:800px;
    height:400px;
    overflow:hidden;
    border:8px solid #ccc;
}

/**
 * Styling the images
 *
 * position:absolute is to put all images in a stack. Dimensions are set to increase the size of these images so their edges do not appear in the parent box when we move them inside the said box.
 * Because the images are now larger than their parent container, we use top, left and margin values to align them in the center of the box.
 * Finally, we set the transition (property and duration). Note that duration values are different for opacity and transform as we want the "fade-in" effect to be faster than the "panning" effect.
 */

#slideshow img {
    position:absolute;
    width:800px;
    height:400px;
    top:50%;
    left:50%;
    margin-left:-400px;
    margin-top:-200px;
    opacity:0;
    -webkit-transition-property: opacity, -webkit-transform;
    -webkit-transition-duration: 3s, 10s;
       -moz-transition-property: opacity, -moz-transform;
       -moz-transition-duration: 3s, 10s;
        -ms-transition-property: opacity, -ms-transform;
        -ms-transition-duration: 3s, 10s;
         -o-transition-property: opacity, -o-transform;
         -o-transition-duration: 3s, 10s;
            transition-property: opacity, transform;
            transition-duration: 3s, 10s;
}

/**
 * We change the point of origin using four corners so images do not move in the same direction. 
 * This technique allows us to create various paths while applying the same translate() values to all images (see the 'fx' class further below).
 */

#slideshow img  {
    -webkit-transform-origin: bottom left;
       -moz-transform-origin: bottom left;
        -ms-transform-origin: bottom left;
         -o-transform-origin: bottom left;
            transform-origin: bottom left;
}

#slideshow :nth-child(2n+1) {
    -webkit-transform-origin: top right;
       -moz-transform-origin: top right;
        -ms-transform-origin: top right;
         -o-transform-origin: top right;
            transform-origin: top right;
}

#slideshow :nth-child(3n+1) {
    -webkit-transform-origin: top left;
       -moz-transform-origin: top left;
        -ms-transform-origin: top left;
         -o-transform-origin: top left;
            transform-origin: top left;
}
#slideshow :nth-child(4n+1) {
  -webkit-transform-origin: bottom right;
     -moz-transform-origin: bottom right;
      -ms-transform-origin: bottom right;
       -o-transform-origin: bottom right;
          transform-origin: bottom right;
}

/**
 * Because of the stacking context, we need to make sure that the first image (in source) is not hidden by the last one. 
 * The rule below moves all images past the second one down the stack. 
 * This is because the second image needs to show on top of the first one when it transitions in.
 */

#slideshow .fx:first-child + img ~ img  {
    z-index:-1;
}

/**
 * Because images are styled with a different point of origin, the following rule will create different panning effects.
 */

#slideshow .fx {
    opacity:1;
    -webkit-transform: scale(1.1);
       -moz-transform: scale(1.1);
        -ms-transform: scale(1.1);
         -o-transform: scale(1.1);
            transform: scale(1.1);
}
	